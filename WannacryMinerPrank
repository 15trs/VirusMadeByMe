import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import threading
import time
import logging

# Configuring logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

class WannaCry:
    def __init__(self, root):
        self.root = root
        self.root.title("WannaCry - Ransomware")
        self.root.geometry("300x150")
        self.root.resizable(False, False)
        self.root.configure(bg='#0F1626')  # Background color

        self.style = ttk.Style()
        self.style.theme_use("clam")

        self.root.iconbitmap('ransomware_icon.ico')  # Change 'ransomware_icon.ico' to your icon file

        self.label = ttk.Label(root, text="¡Tus archivos están siendo encriptados!\n¡No cierres esta ventana!", foreground="#FF0000", font=("Arial", 12, "bold"), background='#0F1626')
        self.label.pack(pady=10)

        self.menu_bar = tk.Menu(root)
        self.root.config(menu=self.menu_bar)

        self.file_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.file_menu.add_command(label="¿Cómo puedo recuperar mis archivos?", command=self.recover_files)
        self.file_menu.add_command(label="Contactar al atacante", command=self.contact_attacker)
        self.file_menu.add_separator()
        self.file_menu.add_command(label="Eliminar archivos cifrados", command=self.delete_encrypted_files)
        self.file_menu.add_command(label="Acerca de WannaCry", command=self.about_wannacry)
        self.menu_bar.add_cascade(label="Información", menu=self.file_menu)

        self.encrypting = True
        self.timer_thread = threading.Thread(target=self.timer)
        self.timer_thread.start()

        # Logging actions
        logging.info("WannaCry ransomware initialized.")

    def timer(self):
        start_time = time.time()
        while self.encrypting:
            elapsed_time = time.time() - start_time
            self.label.config(text=f"¡Tus archivos están siendo encriptados!\nTiempo transcurrido: {int(elapsed_time)} segundos")
            time.sleep(1)

    def recover_files(self):
        messagebox.showinfo("Recuperación de Archivos", "Para recuperar tus archivos, debes pagar el rescate en Bitcoin.")
        logging.info("User asked for file recovery information.")

    def contact_attacker(self):
        messagebox.showinfo("Contactar al Atacante", "Puedes contactar al atacante a través de la dirección de correo electrónico: attacker@example.com")
        logging.info("User asked for contacting the attacker.")

    def delete_encrypted_files(self):
        messagebox.showinfo("Eliminar Archivos Cifrados", "Eliminar los archivos cifrados podría resultar en pérdida permanente de datos. ¿Estás seguro?")
        logging.info("User asked for deleting encrypted files.")

    def about_wannacry(self):
        messagebox.showinfo("Acerca de WannaCry", "WannaCry es un ransomware que encripta tus archivos y solicita un rescate en Bitcoin para recuperarlos.")
        logging.info("User asked for information about WannaCry.")

def disable_close_button():
    messagebox.showinfo("No se puede cancelar", "¡Tus archivos están siendo encriptados! ¡No puedes cerrar esta ventana!")
    logging.info("User tried to close the window.")

def main():
    logging.info("Application started.")
    root = tk.Tk()
    root.configure(bg='#0F1626')  # Background color
    root.protocol("WM_DELETE_WINDOW", disable_close_button)
    ransomware = WannaCry(root)
    root.mainloop()
    logging.info("Application closed.")

if __name__ == "__main__":
    main()
